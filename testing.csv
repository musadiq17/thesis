issue_id,type,status,resolution,component,priority,reporter,created,assigned,assignee,resolved,created,assigned,summary   ,description   ,affected_version,fixed_version,votes,watches,description_words,assingnee_count,comment_count,commenter,Surprising,Dormant,Blocker,Security,Performance,Breakage,commit_count,file_count,files
72,Bug,Closed,Fixed,camel-core,Major,Willem Jiang,2007/07/08 11:33:06 +0100,null,Unassigned,2007/07/09 10:00:19 +0100,0.93556713,null,FileConfigureTest can't pass in Windows box   ,Because of the File.separator is different between the unix and windows system. So the test can't pass in windows box.I just attached a patch for it. Please have a look at it  I tested it in windows box.   ,1.1.0,1.1.0,0,0,38,0,1,1,0,0,0,1,0,0,1,1,camel-core/src/test/java/org/apache/camel/component/file/FileConfigureTest.java;
84,Improvement,Closed,Fixed,camel-core,Major,Brian McCallister,2007/08/03 00:41:31 +0100,2008/05/21 18:50:34 +0100,Hadrian Zbarcea,2008/09/25 16:30:09 +0100,419.6587731,126.9024884,Throw Useful Exception on No TypeConverter Available window ,When there is no type converter available an NPE is thrown that requires tracing through sources to find root of problem   ,1.0.0,1.5.0,0,0,21,1,9,3,0,0,0,0,0,0,2,2,camel-core/src/main/java/org/apache/camel/NoTypeConversionAvailableException.java;camel-core/src/main/java/org/apache/camel/processor/ConvertBodyProcessor.java;
100,Improvement,Closed,Fixed,camel-activemq,Minor,Aaron Crickenberger,2007/08/13 20:28:46 +0100,null,Unassigned,2007/09/04 11:05:01 +0100,21.60850694,null,Most recent snapshot requires ActiveMQ   ,This may be moot given the projects' relationship  but it's a recently introduced side effect. Before the most recent snapshot  I was able to use Camel without any ActiveMQ jar's floating around so long as I never tried to use any 'activemq:queue:foo' URI's. Now with the most recent snapshot  the first time I do something that uses AnnotationTypeCoverterLoader  ActiveMQConverter gets loaded  and then causes a NoClassDefFoundError for ActiveMQDestination.   ,1.1.0,1.2.0,0,0,69,0,7,2,0,0,0,0,0,1,3,11,tests/camel-partial-classpath-test/pom.xml;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/RouteTest.java;tests/camel-partial-classpath-test/src/test/resources/log4j.properties;tests/pom.xml;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/MyBean.java;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/MyConverter.java;tests/camel-partial-classpath-test/src/test/java/org/apache/camel/tests/partialclasspath/RouteTest.java;tests/camel-partial-classpath-test/src/test/resources/META-INF/services/org/apache/camel/TypeConverter;camel-core/src/main/java/org/apache/camel/impl/DefaultComponentResolver.java;camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java;tests/camel-partial-classpath-test/src/test/resources/log4j.properties;
112,Bug,Closed,Fixed,camel-activemq,Major,james strachan,2007/08/17 17:05:54 +0100,null,Unassigned,2007/08/17 17:13:12 +0100,0.005069444,null,JMSXGroupID is not copied across ActiveMQ endpoints   ,See thread: http://www.nabble.com/MethodName-in-header-is-ignored-by-beanRef%28%29-tf4285009s22882.html#a12198390   ,1.1.0,1.2.0,0,0,6,0,1,1,0,0,0,0,0,0,1,4,components/camel-activemq/src/test/java/org/apache/camel/component/activemq/ActiveMQReplyToHeaderUsingConverterTest.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/EndpointMessageListener.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsBinding.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsMessage.java;
132,Improvement,Closed,Fixed,camel-http,Major,james strachan,2007/08/31 12:12:02 +0100,null,Unassigned,2007/08/31 12:43:21 +0100,0.021747685,null,enable polling via the http component   ,   ,1.1.0,1.2.0,0,0,1,0,1,1,1,0,0,0,0,0,1,4,components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpPollingConsumer.java;components/camel-http/src/test/java/org/apache/camel/component/http/HttpPollingGetTest.java;
143,Improvement,Closed,Fixed,camel-core,Major,Dejan Predovic,2007/09/11 10:56:38 +0100,null,Unassigned,2007/10/12 10:55:16 +0100,30.99905093,null,XPath namespaces configuration not possible through xml   ,Xpath xml element offers no way to define namespace mappings.   ,1.1.0,1.3.0,0,0,10,0,1,1,1,0,0,1,0,0,2,12,camel-core/src/main/java/org/apache/camel/builder/xml/XPathBuilder.java;camel-core/src/main/java/org/apache/camel/model/language/ElementAwareExpression.java;camel-core/src/main/java/org/apache/camel/model/language/XPathExpression.java;camel-core/src/main/java/org/apache/camel/spi/ElementAware.java;camel-core/src/test/java/org/apache/camel/builder/xml/XPathWithNamespacesFromDomTest.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;components/camel-spring/src/test/java/org/apache/camel/spring/processor/SpringXPathFilterWithNamespaceTest.java;components/camel-spring/src/test/resources/org/apache/camel/spring/processor/xpathFilterWithNamespace.xml;camel-core/src/main/java/org/apache/camel/model/language/ExpressionType.java;camel-core/src/main/java/org/apache/camel/model/language/XPathExpression.java;camel-core/src/test/java/org/apache/camel/processor/XPathFilterTest.java;components/camel-spring/src/main/java/org/apache/camel/spring/handler/CamelNamespaceHandler.java;
161,Bug,Closed,Fixed,,Trivial,Bozhong Lin,2007/09/28 05:04:46 +0100,2007/09/28 05:04:46 +0100,james strachan,2007/10/01 16:17:52 +0100,3.467430556,3.467430556,URL link broken in org.apache.camel.Processor API doc   ,'Message Transformer' link is broken.   ,1.1.0,1.2.0,0,0,5,1,1,1,0,0,0,0,0,0,1,1,camel-core/src/main/java/org/apache/camel/Processor.java;
166,Bug,Closed,Fixed,camel-core,Blocker,Bozhong Lin,2007/10/09 06:24:42 +0100,null,Unassigned,2007/10/10 18:40:18 +0100,1.510833333,null,org.apache.camel.processor.UnitOfWorkWithAsyncFlowTest failure   ,Running org.apache.camel.processor.UnitOfWorkWithAsyncFlowTestTests run: 3  Failures: 1  Errors: 0  Skipped: 0  Time elapsed: 20.345 sec &lt;&lt;&lt; FAILURE!This prevents developer from building camel under Linux platform. Thanks!   ,1.1.0,1.2.0,0,0,25,0,3,2,0,0,0,0,0,0,2,3,camel-core/pom.xml;camel-core/pom.xml;camel-core/src/test/java/org/apache/camel/processor/UnitOfWorkTest.java;
199,Improvement,Closed,Fixed,camel-core,Minor,Gert Vanthienen,2007/11/02 08:11:47 +0100,null,Unassigned,2007/11/16 18:38:25 +0100,14.43516204,null,New converter : Node -> Source   ,Currently  there is no converter from Node -&gt; Source.It is required when using Camel's splitter() functionality inside ServiceMix:from('jbi:service:urn:eu:java:smx:fleetintegrator:camel') .splitter(xpath('/traces/trace')) .to('jbi:endpoint:urn:eu:java:smx:fleetintegrator:jms:mq');   ,1.2.0,1.3.0,0,0,30,0,1,1,0,0,0,0,0,0,1,2,camel-core/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java;camel-core/src/test/java/org/apache/camel/converter/JaxpTest.java;
210,Bug,Closed,Fixed,camel-core,Major,Roman Kalukiewicz,2007/11/06 12:46:53 +0100,2007/11/06 12:46:53 +0100,Hadrian Zbarcea,2007/11/14 13:16:01 +0100,8.020231481,8.020231481,exception clause doesn't proceed with pipeline   ,Problem is very similar to CAMEL-191 but this time with exception clause.As exceptions are not cleared pipeline doesn't proceed.   ,1.3.0,1.3.0,0,0,29,1,4,3,1,0,0,0,0,0,2,5,camel-core/src/main/java/org/apache/camel/processor/Pipeline.java;camel-core/src/test/java/org/apache/camel/processor/PipelineTest.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java;camel-core/src/test/java/org/apache/camel/issues/ExceptionTest.java;
214,Bug,Closed,Fixed,,Major,james strachan,2007/11/13 13:20:42 +0100,2007/11/13 13:20:42 +0100,Hadrian Zbarcea,2008/03/31 22:26:54 +0100,139.3793056,139.3793056,the 1.2.0 release didnt' seem to include the javadocs or doc directory (or manual)!   ,I wondered if this was due to your machine Hiram having some dodgy maven plugin around or something?   ,1.2.0,1.3.0,0,0,18,1,4,3,1,0,0,0,0,0,0,0,
224,Bug,Closed,Fixed,camel-core,Major,Arjan Moraal,2007/11/16 09:33:43 +0100,null,Unassigned,2007/11/16 19:01:12 +0100,0.394085648,null,Headers lost after XSLT processing   ,After xslt processing the message headers are lost. See attached unit test  this test fails since revision 590680.http://svn.apache.org/viewvc?view=rev&amp;revision=590680   ,1.3.0,1.3.0,0,1,21,0,2,2,1,0,0,0,0,0,2,3,camel-core/src/main/java/org/apache/camel/builder/xml/XsltBuilder.java;camel-core/src/main/java/org/apache/camel/builder/xml/XsltBuilder.java;components/camel-juel/src/test/java/org/apache/camel/language/juel/issues/XsltLosesHeaderTest.java;
232,Bug,Closed,Fixed,camel-core,Major,Hadrian Zbarcea,2007/11/18 16:42:14 +0100,2007/11/18 16:42:14 +0100,Hadrian Zbarcea,2007/11/19 12:43:27 +0100,0.834178241,0.834178241,Fix performance counters   ,   ,1.2.0,1.3.0,0,0,1,1,1,1,1,0,0,1,0,0,2,17,components/camel-osgi/src/main/java/org/apache/camel/osgi/OsgiComponentResolver.java;camel-core/src/main/java/org/apache/camel/Route.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/DefaultLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/impl/RouteContext.java;camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java;camel-core/src/main/java/org/apache/camel/management/InstrumentationLifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/management/ManagedEndpoint.java;camel-core/src/main/java/org/apache/camel/management/ManagedRoute.java;camel-core/src/main/java/org/apache/camel/management/ObjectNameEncoder.java;camel-core/src/main/java/org/apache/camel/model/FromType.java;camel-core/src/main/java/org/apache/camel/model/ResequencerType.java;camel-core/src/main/java/org/apache/camel/model/RouteType.java;camel-core/src/main/java/org/apache/camel/model/RoutesType.java;camel-core/src/main/java/org/apache/camel/spi/LifecycleStrategy.java;camel-core/src/test/java/org/apache/camel/management/JmxInstrumentationUsingDefaultsTest.java;examples/camel-example-spring/src/main/resources/META-INF/spring/camel-context.xml;
237,Improvement,Closed,Fixed,camel-core,Major,Hadrian Zbarcea,2007/11/19 21:25:35 +0100,2007/11/19 21:25:35 +0100,Hadrian Zbarcea,2007/11/19 21:37:04 +0100,0.007974537,0.007974537,Upgrade geronimo-specs version to 1.1   ,from 1.0   ,1.2.0,1.3.0,0,0,2,1,1,1,0,0,0,1,0,0,1,1,pom.xml;
269,Improvement,Closed,Fixed,camel-core,Major,Donatello Santoro,2007/12/18 15:58:43 +0100,2008/01/21 06:29:05 +0100,Willem Jiang,2008/01/21 06:33:53 +0100,33.60775463,0.003333333,Add getter method for routeCollection property in RouteBuilder class   ,I need to stop a RouteBuilder. A solution for this issue could be access to routeCollection property in RouteBuilder class.   ,1.2.0,1.3.0,0,1,21,1,2,2,0,0,0,1,0,0,1,1,camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java;
275,Improvement,Closed,Fixed,camel-cxf,Major,Freeman Fang,2007/12/25 09:27:20 +0100,null,Unassigned,2008/01/04 09:59:46 +0100,10.02252315,null,cxf camel transport should support to register itself to the cxf bus automatically   ,when cxf bus init  all tranports module on the classpath should register itself to the bus automatically.cxf machenism for this is just add a spring bean to describe the transport id and transport factory class mapping per as below&lt;beans xmlns='http://www.springframework.org/schema/beans' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:foo='http://cxf.apache.org/configuration/foo' xsi:schemaLocation=' http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd'&gt; &lt;bean class='org.apache.camel.component.cxf.transport.CamelTransportFactory' lazy-init='true'&gt; &lt;property name='bus' ref='cxf'/&gt; &lt;property name='transportIds'&gt; &lt;list&gt; &lt;value&gt;http://cxf.apache.org/transports/camel&lt;/value&gt; &lt;/list&gt; &lt;/property&gt; &lt;/bean&gt;&lt;/beans&gt;   ,1.2.0,1.3.0,0,0,67,0,3,3,0,0,0,0,0,0,1,6,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelTransportFactory.java;components/camel-cxf/src/main/resources/META-INF/cxf/cxf-extension-camel.xml;components/camel-cxf/src/main/resources/META-INF/cxf/cxf.extension;components/camel-cxf/src/main/resources/bus-extensions.xml;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/transport/CamelDestinationTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/transport/CamelTestSupport.java;
277,Bug,Closed,Fixed,camel-core,Major,J?r?me Delagnes,2007/12/26 14:16:52 +0100,2007/12/26 14:16:52 +0100,Hadrian Zbarcea,2008/01/18 13:49:46 +0100,22.98118056,22.98118056,[Spring integration] TheadType is missing in org/apache/camel/model/jaxb.index   ,TheadType is missing in org/apache/camel/model/jaxb.index =&gt; JAXB don't know how to unmarshall thread.Bug description found in Camel Users forum : http://www.nabble.com/Processor-thread-pool-td13212513s22882.html   ,1.2.0,1.3.0,0,0,24,1,3,3,0,0,0,1,0,0,1,1,camel-core/src/main/resources/org/apache/camel/model/jaxb.index;
278,Bug,Closed,Fixed,camel-spring,Major,J?r?me Delagnes,2007/12/26 14:30:52 +0100,null,Unassigned,2008/01/18 13:53:28 +0100,22.97402778,null,[Spring integration] Bad urls in META-INF/spring.schemas   ,http/://activemq.apache.org/camel/schema/spring/camel-spring-1.1.xsd becomes http/://activemq.apache.org/camel/schema/spring/camel-spring-1.1.0.xsdhttp/://activemq.apache.org/camel/schema/spring/camel-spring-1.2.xsd becomes http/://activemq.apache.org/camel/schema/spring/camel-spring-1.2.0.xsdThere's no camel-spring-1.1.xsd and camel-spring-1.2.xsd under http://activemq.apache.org/camel/schema/spring/   ,1.2.0,1.3.0,0,0,14,0,2,2,0,0,0,0,0,0,1,1,components/camel-spring/src/main/resources/META-INF/spring.schemas;
283,Improvement,Closed,Fixed,camel-core,Trivial,Claus Ibsen,2008/01/05 15:02:28 +0100,2008/01/21 06:59:56 +0100,Willem Jiang,2008/01/21 07:09:54 +0100,15.6718287,0.006921296,DeadLetterChannel - logging improvements when exchange handled by dead letter   ,The submitted patch have these improvements to the logger in deadletterchannel for delivery attempts outputs exchange id so we can correlate the lines in the log files. now also logs when the exchange could not be delivered and was handled by the failure processer (usually a deadletterchannel) minor issues with existing debug logging when sleeping (now also output millis) to be in line with other similar log lines in CamelI have not outputted the exchange itself (exchange.toString()) when the delivery could not be delivered successfully since there could be sensitive data in the exchange (e.g. an invoice input message) that we do not want to be logged in our log.But I think the logging of the exchange id is a good improvement and that they are aligned in the same position in the logline so it's easier to grep/find in the logs when you investigate and incident.   ,1.2.0,1.3.0,0,0,149,1,3,2,0,0,0,1,0,0,1,1,camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;
286,Bug,Closed,Fixed,camel-cxf,Major,Wilson Freitas,2008/01/11 18:08:07 +0100,2008/01/12 08:21:51 +0100,Willem Jiang,2008/01/12 08:26:28 +0100,0.596076389,0.003206019,NullPointerException in CXF routes when there is an endpoint between router and service CXF endpoints   ,When an endpoint is added between a cxf router and a cxf service endpoint the message exchange is interrupted by a NullPointerException.Example code:----JAVA-BEGIN---------------------------------------------------------//This code worksfrom(StringUtils.join(cxfRouterURI)).to(StringUtils.join(cxfServiceURI)); // This code crashes (same problem with seda and log endpoints)String anyEndpoint = 'activemq:someQueue';----JAVA-END---------------------------------------------------------from(StringUtils.join(cxfRouterURI)).to(anyEndpoint).to(StringUtils.join(cxfServiceURI)); ----EXCEPTION-BEGIN-----------------------------------09/01/2008 18:32:40 org.apache.cxf.phase.PhaseInterceptorChain doInterceptINFO: Interceptor has thrown exception  unwinding noworg.apache.cxf.interceptor.Fault at org.apache.camel.component.cxf.interceptors.RawMessageContentRedirectInterceptor.handleMessage(RawMessageContentRedirectInterceptor.java:43) at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207) at org.apache.camel.component.cxf.invoker.CxfClient.invokeWithMessageStream(CxfClient.java:137) at org.apache.camel.component.cxf.invoker.CxfClient.dispatch(CxfClient.java:89) at org.apache.camel.component.cxf.CxfProducer.process(CxfProducer.java:202) at org.apache.camel.component.cxf.CxfProducer.process(CxfProducer.java:152) at org.apache.camel.impl.converter.AsyncProcessorTypeConverter$ProcessorToAsynProcessorBridge.process(AsyncProcessorTypeConverter.java:44) at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:73) at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:143) at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:87) at org.apache.camel.processor.Pipeline.process(Pipeline.java:101) at org.apache.camel.processor.Pipeline.process(Pipeline.java:85) at org.apache.camel.processor.UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:40) at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:44) at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:68) at org.apache.camel.component.cxf.CamelInvoker.invoke(CamelInvoker.java:71) at org.apache.camel.component.cxf.interceptors.AbstractInvokerInterceptor.handleMessage(AbstractInvokerInterceptor.java:65) at org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:207) at org.apache.camel.component.cxf.CxfMessageObserver.onMessage(CxfMessageObserver.java:83) at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.serviceRequest(JettyHTTPDestination.java:284) at org.apache.cxf.transport.http_jetty.JettyHTTPDestination.doService(JettyHTTPDestination.java:240) at org.apache.cxf.transport.http_jetty.JettyHTTPHandler.handle(JettyHTTPHandler.java:54) at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712) at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211) at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139) at org.mortbay.jetty.Server.handle(Server.java:313) at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506) at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:844) at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:726) at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211) at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381) at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396) at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)Caused by: java.lang.NullPointerException at org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1025) at org.apache.commons.io.IOUtils.copy(IOUtils.java:999) at org.apache.camel.component.cxf.interceptors.RawMessageContentRedirectInterceptor.handleMessage(RawMessageContentRedirectInterceptor.java:39) ... 32 more ----EXCEPTION-END-----------------------------------Known workaround:Change the code like this:----JAVA-BEGIN--------------------------------------------------------- String anyEndpoint = 'activemq:someQueue'; from(StringUtils.join(cxfRouterURI)).process(new Processor(){ public void process(Exchange exchange) throws Exception { exchange.setOut(exchange.getIn()); } }).to(anyEndpoint).to(StringUtils.join(cxfServiceURI));----JAVA-END---------------------------------------------------------   ,1.2.0,1.3.0,0,1,148,1,2,2,0,0,0,0,0,0,1,5,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfExchange.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CxfMessage.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfPayLoadMessageRouterTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfRawMessageRouterTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfRouterTest.java;
288,Improvement,Closed,Fixed,camel-core,Major,Willem Jiang,2008/01/13 13:23:01 +0100,2008/01/13 13:23:01 +0100,Willem Jiang,2008/01/13 13:31:17 +0100,0.005740741,0.005740741,support to set the aggregation stragey of multicastProcessor   ,I have a use case   the router configuration could like this from('direct:a').multicast().to('direct:x'  'direct:y'  'direct:z');  from('direct:x').process(new AppendingProcessor('x')).to('direct:aggregater'); from('direct:y').process(new AppendingProcessor('y')).to('direct:aggregater'); from('direct:z').process(new AppendingProcessor('z')).to('direct:aggregater'); from('direct:aggregater').aggregator(header('cheese')  new BodyAggregatingStrategy()). completedPredicate(header('aggregated').isEqualTo(3)).to('mock:result');Now I send the message to endpoint 'direct:a' and I want to get the final result of the processors.And this requirement is much like the CAMEL-260.   ,1.2.0,1.3.0,0,0,56,1,3,2,0,0,0,0,0,0,1,7,camel-core/src/main/java/org/apache/camel/model/MulticastType.java;camel-core/src/main/java/org/apache/camel/model/ProcessorType.java;camel-core/src/main/java/org/apache/camel/model/SplitterType.java;camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java;camel-core/src/main/java/org/apache/camel/processor/Splitter.java;camel-core/src/test/java/org/apache/camel/processor/MultiCastAggregatorTest.java;camel-core/src/test/java/org/apache/camel/processor/SplitterTest.java;
291,Improvement,Closed,Fixed,camel-core,Major,Przemyslaw Budzik,2008/01/15 15:45:56 +0100,2008/01/15 15:45:56 +0100,Hadrian Zbarcea,2008/02/08 22:39:11 +0100,24.28697917,24.28697917,MulticastRecipientList - recipient list that uses multicast processor   ,Probably it would be useful to have recipientList that in InOut mode doesn't work as a pipeline. I faced that problem  however InOnly is ok. It seems in InOut it reminds of RoutingSlip. Optionally we could use MulticastProcessor to process 'recipients'. If you think it makes sense  attached patch enhances camel-core with such feature.   ,1.3.0,1.3.0,0,0,54,1,4,4,0,0,0,0,0,0,0,0,
298,Improvement,Closed,Fixed,camel-core,Trivial,Christian Schneider,2008/01/19 17:22:55 +0100,2008/04/17 05:02:40 +0100,Claus Ibsen,2008/04/17 06:11:42 +0100,88.53387731,0.047939815,Remove tangle between impl and impl.converter   ,Currently impl and impl.converter reference each other. If possible such cycles should be avoided.When I looked into it I found that impl.converter references only a single class CachingInjector. No other class in camel-core seems to use this class. So my suggestion is to move CachingInjector to impl.converter. So the cycle i removed. As far as I can see this should cause no ther issues.   ,1.2.0; 1.3.0,1.4.0,0,0,64,1,6,3,0,0,0,1,0,0,1,4,camel-core/src/main/java/org/apache/camel/impl/CachingInjector.java;camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java;camel-core/src/main/java/org/apache/camel/impl/converter/CachingInjector.java;camel-core/src/main/java/org/apache/camel/impl/converter/InstanceMethodTypeConverter.java;
304,Bug,Closed,Fixed,camel-http,Major,Roman Kalukiewicz,2008/01/22 01:39:44 +0100,2008/01/22 01:39:44 +0100,Roman Kalukiewicz,2008/01/22 01:48:16 +0100,0.005925926,0.005925926,Multithreaded HTTP invocations doesn't work   ,Description of the bug:http://www.nabble.com/Multithreaded-http-endpoint-to13646722s22882.html#a13646722   ,1.3.0,1.3.0,0,0,7,1,2,2,0,0,0,0,0,0,2,5,components/camel-http/src/main/java/org/apache/camel/component/http/HttpComponent.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-http/src/test/java/org/apache/camel/component/http/MultiThreadedHttpGetTest.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyHttpComponent.java;components/camel-jetty/src/main/java/org/apache/camel/component/jetty/JettyHttpEndpoint.java;
320,Bug,Closed,Fixed,camel-core,Major,Aaron Crickenberger,2008/02/05 14:10:17 +0100,2008/02/05 14:10:17 +0100,Hadrian Zbarcea,2008/02/06 21:56:00 +0100,1.323414352,1.323414352,DefaultParameterMappingStrategy doesn't load its defaults   ,This is preventing BeanProcessor from using bean methods with a Message parameter  or bean methods not named 'process' that have an Exchange as their parameter. For example  to map to a Message the it tries using the ParameterExpression bodyAs(Message.class) instead of inmessageExpression().   ,1.2.0,1.3.0,0,0,42,1,2,2,0,0,0,0,0,0,0,0,
323,Bug,Closed,Fixed,,Trivial,Claus Ibsen,2008/02/10 11:21:45 +0100,null,Unassigned,2008/02/16 18:47:02 +0100,6.309224537,null,spring-2.5.1.jar is twice in the camel distro   ,I downloaded the latest snapshot apache-camel-1.3-20080210.022044-67.zip fromhttp://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/apache-camel/1.3-SNAPSHOT/The .zip file contains spring-2.5.1.jar twice/camel/lib/camel/lib/optionalIs Spring both mandatory and optional?And btw it includes an old version of commons-logging-1.0.4.jar. v1.1 of commons logging is out.   ,1.3.0,1.3.0,0,0,34,0,2,2,0,0,0,0,0,0,0,0,
324,Bug,Closed,Fixed,camel-http,Critical,Alex Cichowski,2008/02/10 11:30:07 +0100,2008/02/12 17:44:36 +0100,Gary Tully,2008/02/28 04:52:42 +0100,17.7240162,15.46395833,bad content length header value in http response   ,By default HttpBinding class copies all request header attributes from the request to the response including 'Content-Length'. So the consequence is that the response is declaring the same size as the request which can lead to serious truncation problems! the workaround is simply to add the line:out.removeHeader('Content-Length'); in the writeResponse method of the httpbinding class allowing jetty to set the right value.   ,1.3.0,1.3.0,0,0,63,1,7,5,0,0,0,1,0,0,0,0,
335,Improvement,Closed,Fixed,camel-mail,Major,Lars Heinemann,2008/02/15 14:09:12 +0100,2008/04/22 05:46:20 +0100,Claus Ibsen,2008/05/10 13:45:34 +0100,84.98358796,18.33280093,Mail component is missing some configuration possibilities   ,It should be possible to configure the behaviour of the mail component. see thread: http://www.nabble.com/Problem-with-Camel-Mail-Component-in-Route-td15497818s12049.html#a15497818   ,1.2.0; 1.3.0,1.4.0,0,0,18,1,20,3,0,0,0,0,0,0,16,70,components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/src/main/resources/META-INF/services/org/apache/camel/component/imaps;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/pom.xml;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/pom.xml;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailMessageTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailRouteTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MimeMessageConsumeTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MultipleDestinationConsumeTest.java;components/camel-mail/src/test/resources/log4j.properties;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailSubjectTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/JavaMailConnection.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailMessage.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailProducer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderNamesAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/RuntimeMailException.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/InvalidConfigurationTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailProcessOnlyUnseenMessagesTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailRouteTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailSubjectTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MimeMessageConsumeTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MultipleDestinationConsumeTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailFetchSizeTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailFetchSizeZeroTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConverters.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailProcessOnlyUnseenMessagesTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailMessage.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailUtils.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailProcessOnlyUnseenMessagesTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MimeMessageConsumeTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailMessage.java;components/camel-mail/src/test/data/logo.jpeg;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailAttachmentTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailEndpoint.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailProducer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailSubjectTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/JavaMailConnection.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MessageHeaderNamesAccessException.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/RuntimeMailException.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/InvalidConfigurationTest.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConfiguration.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/test/java/org/apache/camel/component/mail/MailComponentTest.java;
340,Bug,Closed,Fixed,camel-mina,Major,Claus Ibsen,2008/02/17 17:54:37 +0100,2008/02/28 08:21:09 +0100,Willem Jiang,2008/02/28 09:49:43 +0100,10.66326389,0.06150463,Mina TCP does not support InOut pattern   ,See this thread:http://www.nabble.com/camel-mina-TCP-InOut-exchange-td15530602s22882.htmlThis builder does not support InOut when a client send a textline to localhost:8888.The client never receives a response.url = 'mina:tcp://localhost:8888?textline=true';from(uri).process(new Processor() { public void process(Exchange e) { String in = e.getIn().getBody(String.class); // append newline at end to denote end of data for textline codec e.getOut().setBody('Hello ' + in + '/n'); } });Attached is a patch that fixes this by introducing a new parameter to the URL for fluent builder sync=true (ie is there a better name?)Using this url instead and the patch then Camel will send a response back to the client:mina:tcp://localhost:8888?textline=true&amp;sync=true   ,1.2.0,1.3.0,0,0,98,1,5,3,0,0,0,0,0,0,1,3,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;
356,Improvement,Closed,Fixed,camel-mina,Trivial,Claus Ibsen,2008/03/04 17:11:04 +0100,2008/03/06 09:31:39 +0100,Willem Jiang,2008/03/08 18:32:09 +0100,4.05630787,2.375347222,Synchronous mode should handle exceptions being thrown from MINA   ,Camel MINA in synchronous mode (InOut exchange pattern) does not handle exception thrown from MINA. Currently MINA intercepts this and logs the exception at WARN level.We should override the proper method in Mina and handle it so the end user can deal with it.Also it has been raisen on the forum that it does not propogate header and other properties. This should be raised in another ticket.In the weekend I will work on a patch for Camel to fix this problem.   ,1.3.0,1.3.0,0,0,81,1,11,2,0,0,1,0,0,0,3,15,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;components/camel-mina/pom.xml;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaConverterTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaMulticastTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaUdpTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaUdpUsingTemplateTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaUdpWithInOutUsingPlainSocketTest.java;components/camel-mina/src/test/resources/log4j.properties;
362,Improvement,Closed,Fixed,camel-mina,Major,Hadrian Zbarcea,2008/03/05 16:58:45 +0100,2008/03/05 16:58:45 +0100,Hadrian Zbarcea,2008/03/05 17:00:01 +0100,8.80E-04,8.80E-04,camel-mina: allowing the lazy creation of a connection   ,In the current implementation with a mina component producer if the server is not up when we start Camel it fails. This is because the mina session creation is in the doStart method which is called when Camel starts.A simple solution is to optionally allow to lazily create the session just before sending the exchange in the Producer's process method.   ,1.2.0,1.3.0,0,0,60,1,2,1,0,0,0,1,0,0,0,0,
363,Bug,Closed,Fixed,camel-cxf,Major,Marc Giger,2008/03/05 19:10:04 +0100,2008/03/06 03:24:23 +0100,Willem Jiang,2008/03/11 15:34:02 +0100,5.849976852,5.506701389,camel-cxf component can't deal with the exception message in MESSAGE dataFormat   ,From: Willem JiangTo: camel-user@activemq.apache.orgSubject: Re: camel-cxf throwing a faultDate: Wed  05 Mar 2008 16:26:41 +0800Reply-To: camel-user@activemq.apache.orgHi Marc It looks like camel-cxf component's issue which can't deal with the exception message in MESSAGE dataFormat.Could you fill a JIRA for it ? I will fix it later this week.As usual  you just need throw the exception from the processor   CXF will try to marshal it into a soap fault.Regards WillemMarc Giger wrote:&gt; Hi &gt;&gt; I'm trying to get the following camel route working where the&gt; dataformat is MESSAGE.&gt;&gt; &lt;from uri='cxf:bean:routerEndpoint?dataFormat=MESSAGE'/&gt; &gt; &lt;process ref='decryptProcessor'/&gt; &gt; &lt;choice&gt;&gt; &lt;when&gt; &gt; &lt;methodCall bean='endpointSelector' method='matches'/&gt;&gt; &lt;to uri='cxf:bean:serviceEndpoint?dataFormat=MESSAGE'/&gt; &gt; &lt;/when&gt;&gt; &lt;otherwise&gt; &gt; &lt;to uri='cxf:bean:localEndpoint?dataFormat=MESSAGE'/&gt; &gt; &lt;/otherwise&gt;&gt; &lt;/choice&gt; &gt;&gt; if the endpointSelector bean returns true the request is redirected to&gt; a remote webservice.&gt; otherwise the request is forwarded to a local cxf service (with&gt; local-transport)&gt;&gt; Now  if I invoke the routerEndpoint and somewhere in the pipeline&gt; happens an exception (in my case in the decryptProcessor)  I get the&gt; following Exception in the outFault chain:&gt;&gt; Mar 4  2008 10:48:35 PM org.apache.cxf.phase.PhaseInterceptorChain&gt; doIntercept INFO: Interceptor has thrown exception  unwinding now&gt; org.apache.cxf.interceptor.Fault&gt; at&gt; org.apache.camel.component.cxf.interceptors.RawMessageContentRedirectInterceptor.handleMessage(RawMessageContentRedirectInterceptor.java:43)&gt; at&gt; org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)&gt; at&gt; org.apache.cxf.interceptor.OutgoingChainInterceptor.handleMessage(OutgoingChainInterceptor.java:74)&gt; at&gt; org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:208)&gt; at&gt; org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:77)&gt; at&gt; org.apache.cxf.transport.servlet.ServletDestination.doMessage(ServletDestination.java:79)&gt; at&gt; org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:264)&gt; at&gt; org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:160)&gt; at&gt; org.apache.cxf.transport.servlet.AbstractCXFServlet.invoke(AbstractCXFServlet.java:170)&gt; at&gt; org.apache.cxf.transport.servlet.AbstractCXFServlet.doPost(AbstractCXFServlet.java:148)&gt; at javax.servlet.http.HttpServlet.service(HttpServlet.java:727) at&gt; javax.servlet.http.HttpServlet.service(HttpServlet.java:820) at&gt; org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)&gt; at&gt; org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:362)&gt; at&gt; org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)&gt; at&gt; org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)&gt; at&gt; org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)&gt; at&gt; org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)&gt; at&gt; org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)&gt; at&gt; org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)&gt; at&gt; org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)&gt; at org.mortbay.jetty.Server.handle(Server.java:313) at&gt; org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)&gt; at&gt; org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:844)&gt; at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:644) at&gt; org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211) at&gt; org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381) at&gt; org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)&gt; at&gt; org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)&gt; Caused by: java.lang.NullPointerException at&gt; org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1025) at&gt; org.apache.commons.io.IOUtils.copy(IOUtils.java:999) at&gt; org.apache.camel.component.cxf.interceptors.RawMessageContentRedirectInterceptor.handleMessage(RawMessageContentRedirectInterceptor.java:39) ...&gt; 28 more&gt;&gt; This is because the InputStream is null in&gt; RawMessageContentRedirectInterceptor:&gt;&gt; public void handleMessage(Message message) throws Fault {&gt;&gt; InputStream is = message.getContent(InputStream.class);&gt; OutputStream os = message.getContent(OutputStream.class);&gt; &gt; try { &gt; IOUtils.copy(is  os);&gt; is.close();&gt; os.flush();&gt; } catch (Exception e) {&gt; throw new Fault(e);&gt; }&gt; }&gt;&gt; How can I return a custom soap-fault in a processor/filter?&gt;&gt; Thanks &gt;&gt; Marc&gt;&gt;   ,1.3.0,1.3.0,0,0,302,1,2,2,0,0,0,0,0,0,1,7,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/feature/MessageDataFormatFeature.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/FakeBindingOperationInfo.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/FaultOutInterceptor.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/RawMessageContentRedirectInterceptor.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfCustmerizedExceptionTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfMessageCustomizedExceptionTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfPayLoadCustomizedExceptionTest.java;
370,Bug,Closed,Fixed,camel-ftp,Minor,Chris Custine,2008/03/07 00:09:39 +0100,2008/03/07 02:56:21 +0100,Hadrian Zbarcea,2008/03/07 03:30:31 +0100,0.139490741,0.023726852,SftpConsumer is not connecting and retrieving remote files   ,SftpConsumer does not connect to server due to patch for CAMEL-251. The SftpConsumer also checks remote file modification timestamp against last poll timestamp but incorrectly converts seconds to milliseconds using integer math so the resulting conversion is always negative and will never retrieve file. I will attach the fixes to this issue.   ,1.3.0,1.3.0,0,0,58,1,3,3,0,0,0,1,0,1,0,0,
371,Improvement,Closed,Fixed,camel-mina,Minor,Claus Ibsen,2008/03/07 06:11:45 +0100,null,Unassigned,2008/03/09 11:19:44 +0100,2.213877315,null,Mina Producer should have configurable timeout   ,Currently the camel mina producer (MinaProducer) defaults to have a 10 sec timeout.This is currently not possible to configured eg from the URL parameters etc.Also we should documented on the wiki that 10 sec. is default.   ,1.3.0,1.3.0,0,0,36,0,5,2,0,0,1,0,0,0,1,5,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaComponentTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaExchangeTimeOutTest.java;
374,Bug,Closed,Fixed,camel-http; camel-jetty,Major,David White,2008/03/07 22:31:47 +0100,2008/03/20 04:57:34 +0100,Willem Jiang,2008/03/24 04:51:02 +0100,16.26336806,3.995462963,HttpBinding.writeResponse doesn't set the response status code (i.e. it's always 200)   ,When writing out an Http response  the HttpBinding should check for the existing of the header HttpProducer.HTTP_RESPONSE_CODE and set it in the response if it's there. This allows requests made via the http component to be output with the correct status code info. If also allows processors in the flow to control the status code by setting the header themselves.   ,1.2.0,1.3.0,0,0,60,1,3,2,0,0,0,0,0,0,1,1,components/camel-http/src/main/java/org/apache/camel/component/http/HttpBinding.java;
375,Improvement,Closed,Fixed,camel-mina,Minor,Claus Ibsen,2008/03/08 14:41:52 +0100,null,Unassigned,2008/03/09 11:19:09 +0100,0.859224537,null,camel-mina improvements   ,This ticket holds reference to the various camel-mina improvments and bugfixes lately.   ,1.3.0,1.3.0,0,0,12,0,4,1,0,0,0,0,0,0,1,8,components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaExchange.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaExchangeTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithIoOutProcessorExceptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaUdpWithInOutUsingPlainSocketTest.java;
384,Bug,Closed,Fixed,camel-cxf,Major,Marc Giger,2008/03/12 19:48:11 +0100,2008/03/14 02:34:56 +0100,Willem Jiang,2008/03/14 03:21:07 +0100,1.314537037,0.032071759,Support for a full customized soap-fault incl. fault-code and detail   ,Don't wrap a Fault in a Fault.   ,1.3.0,1.3.0,0,0,7,1,2,2,0,0,0,0,0,0,1,5,components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CamelInvoker.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/PayloadContentRedirectInterceptor.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/RawMessageContentRedirectInterceptor.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfCustmerizedExceptionTest.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/CxfPayLoadCustomizedExceptionTest.java;
389,Improvement,Closed,Fixed,camel-core,Major,Willem Jiang,2008/03/17 10:31:51 +0100,2008/04/01 15:07:20 +0100,Willem Jiang,2008/04/01 15:07:56 +0100,15.19172454,4.17E-04,Parallel processing route   ,Adding the support of this user story CXF Consumer -&gt; Route ---&gt; parallelly send messages and recieve responses---&gt; aggregate response --&gt; further process ----&gt; returnHere is more information about this story &#91;1&#93;http://www.nabble.com/Parallel-processing-route-td15642110.html#a15642110   ,1.2.0,1.3.0,0,0,36,1,2,2,0,0,0,0,1,0,1,5,camel-core/src/main/java/org/apache/camel/model/MulticastType.java;camel-core/src/main/java/org/apache/camel/model/ProcessorType.java;camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java;camel-core/src/main/java/org/apache/camel/processor/ThreadProcessor.java;camel-core/src/test/java/org/apache/camel/processor/MultiCastAggregatorTest.java;
394,Improvement,Closed,Fixed,camel-mina,Minor,Claus Ibsen,2008/03/24 09:34:42 +0100,2008/03/25 20:40:11 +0100,Claus Ibsen,2008/03/26 06:15:08 +0100,1.861412037,0.399270833,Improve logging for camel-mina   ,Currently camel-mina does not log using similar log classnames for a MinaProducer and MinaConsumer. This can be a bit misleading in the log files.MinaConsumer uses an anonymous inner class to do the IoHandler where as MinaProducer does not. This renders the loglines such asMinaConsumer$1 - XXXMinaProducer$RecieveHandler - XXXMinaConsumer should use a non anonymous inner classes so logging is the same:MinaConsumer$RecieveHandler - XXXMinaProducer$ResponseHandler - XXX   ,1.3.0,1.3.0,0,0,78,1,5,1,0,0,0,1,0,0,1,14,components/camel-mina/pom.xml;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaHelper.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaLoggerOptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaProducerShutdownMockTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaProducerShutdownTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTransferExchangeOptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/ReverseProtocolHandler.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/ReverserServer.java;
395,Improvement,Closed,Fixed,camel-mina,Major,Claus Ibsen,2008/03/24 10:22:12 +0100,2008/03/25 20:39:52 +0100,Claus Ibsen,2008/03/26 06:11:04 +0100,1.825601852,0.396666667,MinaProducer waits for MINA worker thread to timeout when stopping JVM from standalone client   ,I was working on a camel-mina-example sample that starts a MinaProducer to send data to a TCP server. When my sample terminates the JVM it waits 60 seconds until the MINA worker threads times out (default 60 sec).As a workaround using System.exit(0) will terminate my client JVM immediately. And running my client as a JUnit tests will also in fact terminate the JVM immediately.The code below demonstrates this: Running as JUnit runs within a few seconds. Run it as a standard java main app and it terminates after 60+ secondsThe code is a test I am working on for the patch to fix it. (I got it fixed but I want a better unit test)public class MinaProducerTest extends ContextTestSupport { public static void main(String[] args) throws Exception { MinaProducerTest test = new MinaProducerTest(); test.producerRunningFromMain(); } private void producerRunningFromMain() throws Exception { long start = System.currentTimeMillis(); System.out.println('+++ start +++'); context = new DefaultCamelContext(); context.addRoutes(createRouteBuilder()); context.start(); testProducer(); context.stop(); System.out.println('+++ stop +++'); long end = System.currentTimeMillis(); assertTrue('Should stop within 5 seconds'  end - start &lt; 5000); // TODO: add shutdown hook to verify that its stopped before 5 seconds  or mocks  } private static final String uri = 'mina:tcp://localhost:6321?textline=true'; protected RouteBuilder createRouteBuilder() { return new RouteBuilder() { public void configure() { from(uri).to('mock:result'); } }; } public void testProducer() throws Exception { MockEndpoint mock = getMockEndpoint('mock:result'); mock.expectedBodiesReceived('Hello World'); Endpoint endpoint = context.getEndpoint(uri); Producer producer = endpoint.createProducer(); Exchange exchange = endpoint.createExchange(); exchange.getIn().setBody('Hello World'); producer.start(); producer.process(exchange); producer.stop(); assertMockEndpointsSatisifed(); } // TODO: Test using mocks requires many codelines to mock all the producer  endpoints etc.}   ,1.3.0,1.3.0,0,0,304,1,3,1,0,0,0,1,1,0,1,14,components/camel-mina/pom.xml;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaComponent.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaConsumer.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaEndpoint.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaHelper.java;components/camel-mina/src/main/java/org/apache/camel/component/mina/MinaProducer.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaLoggerOptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaProducerShutdownMockTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaProducerShutdownTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTcpWithInOutUsingPlainSocketTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/MinaTransferExchangeOptionTest.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/ReverseProtocolHandler.java;components/camel-mina/src/test/java/org/apache/camel/component/mina/ReverserServer.java;
404,Bug,Closed,Fixed,,Trivial,Claus Ibsen,2008/03/28 06:51:11 +0100,2008/03/28 06:51:11 +0100,Claus Ibsen,2008/03/30 18:15:46 +0100,2.475405093,2.475405093,Javadoc warnings   ,Get the javadoc warnings reported by the javadoc generator fixed.   ,1.3.0,1.3.0,0,0,10,1,3,1,0,0,0,1,0,0,5,59,components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsBinding.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsConfiguration.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsExchange.java;components/camel-jms/src/main/java/org/apache/camel/component/jms/requestor/FailedToProcessResponse.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailBinding.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailConsumer.java;components/camel-mail/src/main/java/org/apache/camel/component/mail/MailExchange.java;components/camel-rmi/src/main/java/org/apache/camel/component/rmi/RmiConsumer.java;components/camel-script/src/main/java/org/apache/camel/builder/script/ScriptBuilder.java;components/camel-http/src/main/java/org/apache/camel/component/http/HttpEndpoint.java;components/camel-spring/src/main/java/org/apache/camel/spring/CamelBeanPostProcessor.java;components/camel-spring/src/main/java/org/apache/camel/spring/SpringRouteBuilder.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppBinding.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppConsumer.java;components/camel-xmpp/src/main/java/org/apache/camel/component/xmpp/XmppExchange.java;camel-core/src/main/java/org/apache/camel/AsyncCallback.java;camel-core/src/main/java/org/apache/camel/AsyncProcessor.java;camel-core/src/main/java/org/apache/camel/CamelContext.java;camel-core/src/main/java/org/apache/camel/CamelExchangeException.java;camel-core/src/main/java/org/apache/camel/CamelTemplate.java;camel-core/src/main/java/org/apache/camel/Exchange.java;camel-core/src/main/java/org/apache/camel/Message.java;camel-core/src/main/java/org/apache/camel/NoSuchEndpointException.java;camel-core/src/main/java/org/apache/camel/ProducerTemplate.java;camel-core/src/main/java/org/apache/camel/Route.java;camel-core/src/main/java/org/apache/camel/RuntimeExchangeException.java;camel-core/src/main/java/org/apache/camel/builder/RouteBuilder.java;camel-core/src/main/java/org/apache/camel/component/jmx/JMXMessage.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/BytesSource.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/StringSource.java;camel-core/src/main/java/org/apache/camel/converter/jaxp/XmlConverter.java;camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java;camel-core/src/main/java/org/apache/camel/impl/DefaultConsumer.java;camel-core/src/main/java/org/apache/camel/impl/LoggingExceptionHandler.java;camel-core/src/main/java/org/apache/camel/impl/MessageSupport.java;camel-core/src/main/java/org/apache/camel/impl/converter/AnnotationTypeConverterLoader.java;camel-core/src/main/java/org/apache/camel/management/CamelNamingStrategy.java;camel-core/src/main/java/org/apache/camel/model/ProcessorType.java;camel-core/src/main/java/org/apache/camel/model/RouteContainer.java;camel-core/src/main/java/org/apache/camel/model/config/StreamResequencerConfig.java;camel-core/src/main/java/org/apache/camel/model/language/ExpressionType.java;camel-core/src/main/java/org/apache/camel/processor/Aggregator.java;camel-core/src/main/java/org/apache/camel/processor/ErrorHandlerSupport.java;camel-core/src/main/java/org/apache/camel/processor/loadbalancer/TopicLoadBalancer.java;camel-core/src/main/java/org/apache/camel/spi/LifecycleStrategy.java;camel-core/src/main/java/org/apache/camel/spi/TypeConverterAware.java;camel-core/src/main/java/org/apache/camel/util/CamelContextHelper.java;camel-core/src/main/java/org/apache/camel/util/DefaultTimeoutMap.java;camel-core/src/main/java/org/apache/camel/util/ExchangeHelper.java;camel-core/src/main/java/org/apache/camel/util/ObjectHelper.java;camel-core/src/main/java/org/apache/camel/util/ProducerCache.java;camel-core/src/main/java/org/apache/camel/util/jndi/JndiContext.java;camel-core/src/main/java/org/apache/camel/view/NodeData.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/CamelInvoker.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/MessageInvoker.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/interceptors/AbstractMessageInInterceptor.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/invoker/InvokingContext.java;components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelDestination.java;components/camel-cxf/src/test/java/org/apache/camel/component/cxf/transport/CamelDestinationTest.java;
410,Bug,Closed,Fixed,camel-core,Major,Dan Dudley,2008/03/28 20:51:00 +0100,2008/04/01 05:17:20 +0100,Claus Ibsen,2008/04/05 12:23:27 +0100,7.647534722,4.295914352,Exception handling of the ErrorHandlerSupport class   ,When you configure your route builder and say you want to configure two exceptions lets say: NullPointer and Exception. Now say the bean you call as your end point throws a NullPointer  wouldn't you think the NullPointer policy would handle that exception? Well I'm seeing sometimes it does and sometimes it doesn't due to the map not keeping the exceptions in any particular order. Is there anyway this could be changed to a LinkedHashMap or a List?Issue with class: org.apache.camel.processor.ErrorHandlerSupport   ,1.2.0; 1.3.0,1.4.0,0,0,80,1,14,2,0,0,0,1,0,0,2,12,camel-core/src/main/java/org/apache/camel/processor/exceptionpolicy/DefaultExceptionPolicyStrategy.java;camel-core/src/main/java/org/apache/camel/builder/DeadLetterChannelBuilder.java;camel-core/src/main/java/org/apache/camel/processor/DeadLetterChannel.java;camel-core/src/main/java/org/apache/camel/processor/ErrorHandlerSupport.java;camel-core/src/main/java/org/apache/camel/processor/exceptionpolicy/DefaultExceptionPolicyStrategy.java;camel-core/src/main/java/org/apache/camel/processor/exceptionpolicy/ExceptionPolicyStrategy.java;camel-core/src/test/java/org/apache/camel/builder/ErrorHandlerTest.java;camel-core/src/test/java/org/apache/camel/builder/ExceptionBuilderTest.java;camel-core/src/test/java/org/apache/camel/processor/DeadLetterChannelTest.java;camel-core/src/test/java/org/apache/camel/processor/ErrorHandlerSupportTest.java;camel-core/src/test/java/org/apache/camel/processor/exceptionpolicy/CustomExceptionPolicyStrategyTest.java;camel-core/src/test/java/org/apache/camel/processor/exceptionpolicy/DefaultExceptionPolicyStrategyTest.java;
424,Improvement,Closed,Fixed,documentation,Minor,Claus Ibsen,2008/04/02 05:25:33 +0100,2008/04/02 06:16:12 +0100,Claus Ibsen,2008/04/12 18:17:45 +0100,10.53625,10.50107639,Improve FTP component wiki documentation   ,The wiki documentation for FTP usage could be improved with: java code examples (snippets in unit test classes) that you need the convertTo(String.class) for ASCII file transfer The FTP component is an extension of the File component so it inherits behaviour  features and options from file. State precise witch options a FTPProducer and FTPConsuer can use. Consuming using FTP there are special header key/values for the remote filename etc. that could be of interest for the end users (Maybe for the producer as well)   ,1.3.0,1.4.0,0,0,86,1,5,1,0,0,0,1,0,0,1,1,components/camel-ftp/src/test/java/org/apache/camel/component/file/remote/FromFtpToBinarySampleTest.java;
426,Improvement,Closed,Fixed,camel-core,Major,Roman Kalukiewicz,2008/04/02 12:11:25 +0100,2008/04/02 12:11:25 +0100,Roman Kalukiewicz,2008/04/02 12:45:43 +0100,0.023819444,0.023819444,splitter() should have the same parallel processing functionality that multicast() has   ,Ability to havefrom('direct:parallel').splitter(body().tokenize(' ')  true).to('mock:result');where true parameter to splitter should behave like in multicast() &#8212; processing is done in separate threads for each 'part'.   ,1.4.0,1.4.0,0,0,34,1,4,2,0,0,0,1,1,0,1,5,camel-core/src/main/java/org/apache/camel/model/ProcessorType.java;camel-core/src/main/java/org/apache/camel/model/SplitterType.java;camel-core/src/main/java/org/apache/camel/processor/MulticastProcessor.java;camel-core/src/main/java/org/apache/camel/processor/Splitter.java;camel-core/src/test/java/org/apache/camel/processor/SplitterTest.java;
443,Improvement,Closed,Fixed,documentation,Minor,Claus Ibsen,2008/04/05 17:40:43 +0100,2008/04/06 11:05:58 +0100,Claus Ibsen,2008/04/12 17:24:42 +0100,6.988877315,6.263009259,Improve File component wiki   ,I have added two missings options and then I discovered a few more missing so I am created this ticket so we get this done.The File Component has several options we haven't documented on the wiki yet.Also its javadoc should be improved.And we should provide some better java samples on the wiki.   ,1.3.0,1.4.0,0,0,52,1,1,1,0,0,0,0,0,0,2,11,camel-core/src/test/java/org/apache/camel/component/file/ToFileRouteTest.java;camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java;camel-core/src/main/java/org/apache/camel/component/file/FileEndpoint.java;camel-core/src/main/java/org/apache/camel/component/file/FileExchange.java;camel-core/src/main/java/org/apache/camel/component/file/FileProcessStrategy.java;camel-core/src/main/java/org/apache/camel/component/file/FileProducer.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/DefaultFileRenamer.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/FileProcessStrategyFactory.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/FileProcessStrategySupport.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/FileRenamer.java;camel-core/src/main/java/org/apache/camel/component/file/strategy/package.html;
448,Improvement,Closed,Fixed,camel-jpa,Minor,Claus Ibsen,2008/04/07 19:52:18 +0100,2008/04/07 19:52:18 +0100,Claus Ibsen,2008/04/12 12:51:51 +0100,4.708020833,4.708020833,Upgraded to OpenJPA 1.0.2   ,OpenJPA in release 1.0 and onwards requires a change in the ant build in the pom.xmlIt now requires a persistance.xml file to use.   ,1.3.0,1.4.0,0,0,23,1,3,1,0,0,0,0,0,0,1,3,components/camel-jpa/pom.xml;components/camel-jpa/src/main/resources/META-INF/persistence.xml;pom.xml;
456,Bug,Closed,Fixed,,Critical,Hadrian Zbarcea,2008/04/09 16:48:03 +0100,2008/04/12 19:23:14 +0100,Jonathan Anstey,2008/04/12 23:12:46 +0100,3.267164352,0.159398148,Invalid jar in binary distribution   ,The apache-camel jar in the binary distribution misses a lot of files  including class and schema files (12k in size compared to the 1.9M released jar).   ,1.3.0,1.4.0,0,0,27,1,2,2,0,0,0,0,0,0,0,0,
457,Bug,Closed,Fixed,camel-core,Minor,Torsten Mielke,2008/04/10 09:04:27 +0100,2008/04/11 05:11:11 +0100,Claus Ibsen,2008/04/12 09:20:33 +0100,2.011180556,1.173171296,Camel should raise an exception if parsing of xslt file fails   ,Consider a Camel route that involves an xslt component. When Camel sets up the route  the XsltBuilder ignores any errors coming from the xerces xml parser and continues constructing the route even though the xslt transformer is not initialized. Later when the route is executed Camel correctly checks if the transformer is initialized and raises an error if not:java.lang.IllegalArgumentException: No transformer configured!However in case of a parse error in the xslt file  the whole route becomes unusable and the setup routine that constructs the route should fail with an appropriate error message. A sanity check needs to be added in methodorg.apache.camel.builder.xml.XsltBuilder.setTransformerSource(javax.xml.transform.Source).   ,1.3.0,1.4.0,0,1,101,1,7,2,1,0,0,0,0,0,1,3,camel-core/src/main/java/org/apache/camel/builder/xml/XsltBuilder.java;components/camel-spring/src/test/java/org/apache/camel/component/xslt/InvalidXsltFileTest.java;components/camel-spring/src/test/resources/org/apache/camel/component/xslt/invalid.xsl;
498,Bug,Closed,Fixed,,Major,james strachan,2008/05/08 10:09:35 +0100,2008/05/08 10:09:35 +0100,james strachan,2008/05/08 19:22:49 +0100,0.384189815,0.384189815,file endpoint with noop=true does not detect old files moved into a directory   ,   ,1.3.0,1.4.0,0,0,1,1,1,1,0,0,0,0,0,0,2,5,camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java;camel-core/src/test/java/org/apache/camel/component/file/MoveFilesToDirectoryTest.java;camel-core/src/test/java/org/apache/camel/component/file/MoveFilesToDirectoryWithNoopTest.java;camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java;camel-core/src/test/java/org/apache/camel/component/file/MoveFilesToDirectoryTest.java;
